[project]
name = "make_cags"  # Required
version = "0.0.2"  # Required
description = "Make Co-Abundant Gene groups from gene abundance in H5AD format"  # Optional
readme = "README.md" # Optional

requires-python = ">=3.9"

# https://packaging.python.org/en/latest/specifications/core-metadata/#license
license = {file = "LICENSE.txt"}

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
# Note that this is a list of additional keywords, separated
# by commas, to be used to assist searching for the distribution in a
# larger catalog.
keywords = ["metagenomics", "microbiome", "science"]  # Optional

# This should be your name or the name of the organization who originally
# authored the project, and a valid email address corresponding to the name
# listed.
authors = [
  {name = "Jonathan L Golob", email = "j-dev@golob.org" },
  
   # Optional
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
  {name = "Jonathan L Golob", email = "j-dev@golob.org" },
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  # Indicate who your project is intended for
  'Intended Audience :: Science/Research',

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [ 
  'anndata>=0.9.2',
  'numpy>=1.25.2',
  "pandas>=2.1.1",
  'scipy>=1.11.3',
  'pynndescent>=0.5.7'
]


# List URLs that are relevant to your project
#
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
# https://packaging.python.org/specifications/core-metadata/#project-url-multiple-use
# https://packaging.python.org/specifications/core-metadata/#home-page-optional
#
# Examples listed include a pattern for specifying where the package tracks
# issues, where the source is hosted, where to say thanks to the package
# maintainers, and where to support the project financially. The key is
# what's used to render the link text on PyPI.
[project.urls]  # Optional
"Homepage" = "https://github.com/Golob-Minot/make_cags/"
"Bug Reports" = "https://github.com/Golob-Minot/make_cags/issues"
"Source" = "https://github.com/Golob-Minot/make_cags/"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts]  # Optional
make_cags = "make_cags.make_cags:main"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
#package-data = {"sample" = ["*.dat"]}

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"